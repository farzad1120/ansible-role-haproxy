---
- name: Ensure HAProxy is installed.
  ansible.builtin.package:

    name: haproxy
    state: present
- name: Ensure HAProxy is enabled (so init script will start it on Debian).
  ansible.builtin.lineinfile:
    dest: /etc/default/haproxy
    regexp: "^ENABLED.+$"
    line: "ENABLED=1"
    state: present
  when: ansible_os_family == 'Debian'

- name: Get HAProxy version.
  ansible.builtin.command: haproxy -v
  register: haproxy_version_result
  changed_when: false
  check_mode: false

- name: Copy ACME domain validation plugin in haproxy folder
  ansible.builtin.template:
    src: acme-http01-webroot.lua.j2
    dest: /etc/haproxy/acme-http01-webroot.lua
    mode: 644

- name: Set HAProxy version.
  ansible.builtin.set_fact:
    haproxy_version: '{{ haproxy_version_result.stdout_lines[0] | regex_replace("^HA-?Proxy version (\d+(\.\d+)*).*$", "\1") }}'

- name: Copy HAProxy configuration in place.
  ansible.builtin.template:
    src: "haproxy-nossl.cfg.j2"
    dest: /etc/haproxy/haproxy.cfg
    mode: 644
    validate: haproxy -f %s -c
  notify: restart haproxy

- ansible.builtin.import_tasks: certbot.yml

- name: Copy HAProxy configuration in place.
  ansible.builtin.template:
    src: "{{ haproxy_template }}"
    dest: /etc/haproxy/haproxy.cfg
    mode: 644
    validate: haproxy -f %s -c
  notify: restart haproxy

- name: Restart HAProxy.
  ansible.builtin.debug:
    msg: "Restarting service."
  notify: restart haproxy

- name: Ensure HAProxy is started and enabled on boot.
  ansible.builtin.service:
    name: haproxy
    state: started
    enabled: "yes"
